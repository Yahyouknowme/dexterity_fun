import { clusterApiUrl, Connection, Keypair, PublicKey } from "@solana/web3.js";
import { Wallet } from "@project-serum/anchor";
import dexterityTs from "@hxronetwork/dexterity-ts";
const dexterity = dexterityTs.default;

const CLUSTER_NAME = "devnet";
const rpc = clusterApiUrl(CLUSTER_NAME);

// create a new wallet and airdrop it some SOL
const keypair = Keypair.generate();
const wallet = new Wallet(keypair);

const connection = new Connection(rpc, "confirmed");
const airdropSignature = await connection.requestAirdrop(
  wallet.publicKey,
  1000000000 // 1 SOL = 1 billion Lamports
);
await connection.confirmTransaction(airdropSignature);

// get the latest manifest
const manifest = await dexterity.getManifest(rpc, false, wallet);
console.log(manifest.wallet);

const mpgPubkey = new PublicKey("4vRmZsJyAcuzdChFjV7nr9cvHweGLSN5oh3ioyoA8mf7");
const trgPubkey = await manifest.createTrg(mpgPubkey);
console.log("success! trg pubkey:", trgPubkey.toBase58());


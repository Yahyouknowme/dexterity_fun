import { Connection, PublicKey } from "@solana/web3.js";
import BN from "bn.js";
import { PrimedTransaction } from "./types";
export declare const AAOB_ID: PublicKey;
/**
 *
 * @param connection The solana connection object to the RPC node
 * @param callerAuthority The caller authority will be the required signer for all market instructions.
 * Callback information can be used by the caller to attach specific information to all orders.
 * In practice, it will almost always be a program-derived address.
 * @param callbackInfoLen An example of this would be to store a public key to uniquely identify the owner of a particular order. This example would require a value of 32
 * @param callbackIdLen The prefix length of callback information which is used to identify self-trading in this example
 * @param eventCapacity The capacity of an event
 * @param nodesCapacity The capacity of a node
 * @param feePayer The fee payer of the transaction
 * @param programId The agnostic orderbook program ID, or null to use the deployed program ID
 * @returns
 */
export declare const createMarket: (connection: Connection, callerAuthority: PublicKey, callbackInfoLen: BN, callbackIdLen: BN, eventCapacity: number, nodesCapacity: number, minBaseOrderSize: BN, feePayer: PublicKey, tickSize: BN, crankerReward: BN, programId?: PublicKey | undefined) => Promise<PrimedTransaction>;
